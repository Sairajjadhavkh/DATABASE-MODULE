 # SECTION 1

create database sairaj;
USE  SAIRAJ;
# 1.
create table DEPT (DEPTNO INT,DNAME VARCHAR(15),LOC VARCHAR(10));

INSERT INTO  DEPT VALUES (10 ,'ACCOUNTING','NEW YORK'),(20 ,'RESEARCH','DALLAS'),(30	,'SALES','CHICAGO'),(40	,'OPERATIONS','BOSTON');

# 2.
CREATE TABLE EMP (EMPNO	int,
ENAME varchar(10),
JOB varchar(9),
HIREDATE date,
SAL float,
COMM float,
DEPTNO	int);

INSERT INTO EMP VALUES
(7839,	'KING',		'MANAGER',	'1991-11-17',	5000,	NULL,	10),
(7698,	'BLAKE',	'CLERK',	'1981-05-01',	2850,	NULL,	30),
(7782	,'CLARK','MANAGER',	'1981-06-09'	,2450	,NULL,	10),
(7566,	'JONES',	'CLERK'	,'1981-04-02',	2975,	NULL, 20),
(7654,	'MARTIN'	,'SALESMAN','1981-09-28',	1250,	1400,	30),
(7499,	'ALLEN'	,'SALESMAN',	'1981-02-20'	,1600	,300	,30);

# 3.	Display the average SAL for all the employees whose job is CLERK.

SELECT AVG(SAL) FROM EMP WHERE JOB='CLERK';

# 4.	Display the rows where ENAME begins with the letter ‘A’.

SELECT * FROM EMP WHERE ENAME LIKE 'A%';

# 5.	If all employees not receiving a commission are entitled for $300, find the net earnings (sal+comm) of each employee.

select ename,sal+ifnull(comm,300) "Net Earnings" from emp;

# 6.	Display the names of all employees with the initial letter only in capital.

SELECT CONCAT(UPPER(SUBSTR(ENAME,1,1)),LOWER(SUBSTR(ENAME,2))) FROM EMP;

# 7.	Find the total number of CLERKs joined after ’01-Jan-81’.

SELECT COUNT(JOB) FROM EMP WHERE HIREDATE>'1981-01-01' AND JOB='CLERK';

# 8.	Find the names of all employees whose name ends with the letter ‘M’.

SELECT ENAME FROM EMP WHERE ENAME LIKE '%M';

# 9.	Display the position at which the string ‘AR’ occurs in the ename.

SELECT instr(ENAME,'AR') FROM EMP;

# 10.	Display the HRA for each employee given that HRA is 20% of SAL.

SELECT SAL*0.2 "HRA" FROM EMP;


                                                                   # SECTION 2


/* 1.	Write a stored procedure by the name of NUM_100 to tell whether the product of two numbers is less than, equal to or greater than 100. 
 The two numbers are to be passed to the stored procedure as parameters. 
 The stored procedure should insert the appropriate message into a suitable TEMPP output table. Calling program for the stored procedure need not be written.*/


CREATE TABLE TEMPP (RESULT VARCHAR(40));

delimiter //
create procedure NUM_100(num1 int ,num2 int)
begin
	declare product int;
    set product=num1*num2;
    IF product>=100 then
		insert into TEMPP values ('equal to or greater than 100');
	else
		insert into TEMPP values ('less than 100');
	end if;
end; //
delimiter ;

call NUM_100(5,2);
select * from tempp;

/*2.	Create a stored function by the name of F2C to convert a temperature in Fahrenheit (F) to its equivalent in Celsius (C).
 The temperature in Fahrenheit is to be passed to the stored function as a parameter. 
 The stored function should return the temperature in Celsius.  The required formula is:- C= (F-32)*5/9
Calling program for the stored function need not be written.*/


delimiter //
create function F2C(temp float)
returns float
deterministic 
begin
	declare c float;
    set c=(temp-32)*5/9;
    return c;
end; //
delimiter ;

select F2C(111.23) from dual;